name: Release Version System

on:
  push:
    tags:
      - 'v*.*.*'  # Triggers on version tags like v1.0.0, v2.1.3, etc.

permissions:
  contents: write
  actions: read

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run tests
        run: |
          # Run basic tests first
          python3 tests/test_basic.py
          
          # Run additional tests to ensure everything works
          python3 -m pytest tests/ -v --tb=short

      - name: Generate version and create release using our own action
        id: version
        uses: ./
        with:
          VERSION_FILE: "version.txt"
          GIT_REPO_PATH: "."
          CREATE_RELEASE: true

      - name: Extract version info for major tag update
        id: version_info
        run: |
          # Get the tag name (e.g., v1.2.3)
          TAG_NAME=${GITHUB_REF#refs/tags/}
          echo "tag_name=$TAG_NAME" >> $GITHUB_OUTPUT
          
          # Extract major version (e.g., v1.2.3 -> v1)
          MAJOR_VERSION=$(echo $TAG_NAME | cut -d. -f1)
          echo "major_version=$MAJOR_VERSION" >> $GITHUB_OUTPUT
          
          echo "Tag: $TAG_NAME, Major: $MAJOR_VERSION"

      - name: Update major version tag
        run: |
          # Delete existing major version tag if it exists
          git tag -d ${{ steps.version_info.outputs.major_version }} 2>/dev/null || true
          git push origin :refs/tags/${{ steps.version_info.outputs.major_version }} 2>/dev/null || true
          
          # Create new major version tag pointing to current commit
          git tag ${{ steps.version_info.outputs.major_version }}
          git push origin ${{ steps.version_info.outputs.major_version }}
          
          echo "‚úÖ Updated major version tag ${{ steps.version_info.outputs.major_version }} to point to ${{ steps.version_info.outputs.tag_name }}"

      - name: Display release results
        run: |
          echo "## üéâ Release Summary" >> $GITHUB_STEP_SUMMARY
          echo "- **Version Created:** ${{ steps.version.outputs.version }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Previous Version:** ${{ steps.version.outputs.current_version }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Major Version Tag:** ${{ steps.version_info.outputs.major_version }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Release Created:** ‚úÖ Using our own action!" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### üì¶ Usage for Users" >> $GITHUB_STEP_SUMMARY
          echo '```yaml' >> $GITHUB_STEP_SUMMARY
          echo "uses: sanjeevkumarraob/version-system@${{ steps.version_info.outputs.major_version }}" >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY

  notify:
    needs: release
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Notify release status
        run: |
          if [ "${{ needs.release.result }}" == "success" ]; then
            echo "üéâ Release ${{ github.ref_name }} completed successfully!"
            echo "‚úÖ Used our own version-system action to create the release!"
            echo "Users can now use: sanjeevkumarraob/version-system@${GITHUB_REF#refs/tags/v}"
          else
            echo "‚ùå Release ${{ github.ref_name }} failed!"
            exit 1
          fi
