name: Version Bump and Tag

on:
  workflow_dispatch:
    inputs:
      version_type:
        description: 'Version bump type'
        required: true
        default: 'patch'
        type: choice
        options:
          - patch
          - minor
          - major
      custom_version:
        description: 'Custom version (optional, overrides version_type)'
        required: false
        type: string

permissions:
  contents: write
  actions: write

jobs:
  version-bump:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Update version.txt based on bump type
        run: |
          if [ -n "${{ github.event.inputs.custom_version }}" ]; then
            # Use custom version if provided
            echo "${{ github.event.inputs.custom_version }}" > version.txt
            echo "Updated version.txt to custom version: ${{ github.event.inputs.custom_version }}"
          else
            # Read current version and bump it
            CURRENT_VERSION=$(cat version.txt)
            IFS='.' read -ra VERSION_PARTS <<< "$CURRENT_VERSION"
            MAJOR=${VERSION_PARTS[0]:-0}
            MINOR=${VERSION_PARTS[1]:-0}
            PATCH=${VERSION_PARTS[2]:-0}
            
            # Bump version based on type
            case "${{ github.event.inputs.version_type }}" in
              "major")
                MAJOR=$((MAJOR + 1))
                MINOR=0
                PATCH=0
                ;;
              "minor")
                MINOR=$((MINOR + 1))
                PATCH=0
                ;;
              "patch")
                PATCH=$((PATCH + 1))
                ;;
            esac
            
            NEW_VERSION="$MAJOR.$MINOR.$PATCH"
            echo "$NEW_VERSION" > version.txt
            echo "Bumped ${{ github.event.inputs.version_type }} version from $CURRENT_VERSION to $NEW_VERSION"
          fi

      - name: Generate next version using our own action
        id: version
        uses: ./
        with:
          VERSION_FILE: "version.txt"
          GIT_REPO_PATH: "."

      - name: Run tests
        run: |
          # Run basic tests first
          python3 tests/test_basic.py

      - name: Commit version bump
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          
          git add version.txt
          git commit -m "Bump version to ${{ steps.version.outputs.version }}"
          git push

      - name: Create and push tag
        run: |
          # Create the new version tag
          git tag -a v${{ steps.version.outputs.version }} -m "Release ${{ steps.version.outputs.version }}"
          git push origin v${{ steps.version.outputs.version }}
          
          echo "âœ… Created and pushed tag v${{ steps.version.outputs.version }}"

      - name: Summary
        run: |
          echo "## Version Bump Summary" >> $GITHUB_STEP_SUMMARY
          echo "- **Previous Version:** ${{ steps.version.outputs.current_version }}" >> $GITHUB_STEP_SUMMARY
          echo "- **New Version:** ${{ steps.version.outputs.version }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Tag Created:** v${{ steps.version.outputs.version }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "ðŸš€ **Release workflow will now trigger automatically!**" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "Users will be able to use:" >> $GITHUB_STEP_SUMMARY
          echo '```yaml' >> $GITHUB_STEP_SUMMARY
          MAJOR_VERSION=$(echo ${{ steps.version.outputs.version }} | cut -d. -f1)
          echo "uses: sanjeevkumarraob/version-system@v$MAJOR_VERSION" >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
